; This simple program can write each 64 colors to the indicated memory address.
; Low 7 bits is available in out_low_address, but 6 bits is on out_high_address.
; Point matrix have 160x120 on VGA (640x480) resolution.
; Use Xilinx PicoBlaze 8Bit CPU.
;
CONSTANT  out_low_address,    16; 7 bit
CONSTANT  out_high_address,   17; 6 bit
CONSTANT  out_color,          20;
NAMEREG   s0,                 low_address;
NAMEREG   s1,                 high_address;
NAMEREG   s2,                 color;
;
; Example : from upper-left corner put 5 5x7 typeface color characters.
;
; WHITE
LOAD low_address, 00;
LOAD high_address, 00;
LOAD color, 3F;
CALL SMILE;
;
; VIOLET
LOAD low_address  , 06;
LOAD high_address , 00;
LOAD color        , 22;
CALL SMILE;
;
; RED
LOAD low_address  , 0C;
LOAD high_address , 00;
LOAD color        , 30;
CALL SMILE;
;
; GREEN
LOAD low_address  , 12;
LOAD high_address , 00;
LOAD color        , 0C;
CALL SMILE;
;
; BLUE
LOAD low_address  , 18;
LOAD high_address , 00;
LOAD color        , 03;
CALL SMILE;
;
; FINISH
JUMP END;
;
; DRAW CHARACTER CREATED BY RAW OPERATIONS
SMILE:
;
; .***.
;
  LOAD  sE    ,    low_address  ;
  LOAD  sF    ,   high_address  ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
;
; *****
;
  ADD   sE    ,             9C  ;
  ADDCY sF    ,             00  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
;
; *.*.*
;
  ADD   sE    ,             9C  ;
  ADDCY sF    ,             00  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
;
; *****
;
  ADD   sE    ,             9C  ;
  ADDCY sF    ,             00  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
;
; *.*.*
;
  ADD   sE    ,             9C  ;
  ADDCY sF    ,             00  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             02  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             02  ;
  CALL  PIXEL                   ;
;
; *...*
;
  ADD   sE    ,             9C  ;
  ADDCY sF    ,             00  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  ADD   sE    ,             01  ;
  ADD   sE    ,             01  ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
;
; .***.
;
  ADD   sE    ,             9C  ;
  ADDCY sF    ,             00  ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  CALL  PIXEL                   ;
  ADD   sE    ,             01  ;
  RETURN;
;
; DRAW PIXEL STORED IN sF/sE REGS - 6bit/7bit (MAX 19200 - 160x120 PIXELS).
PIXEL:
  OUTPUT sE    , out_low_address;
  OUTPUT sF    , out_high_address;
  OUTPUT color , out_color;
  RETURN;
;
; STAY CPU IN ACTIVE LOOP
END:
  JUMP END;

